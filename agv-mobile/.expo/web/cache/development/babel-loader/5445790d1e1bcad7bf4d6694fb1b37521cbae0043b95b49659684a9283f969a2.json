{"ast":null,"code":"import * as React from 'react';\nimport { captureImageData } from './WebCameraUtils';\nconst qrWorkerMethod = ({\n  data,\n  width,\n  height\n}) => {\n  const decoded = self.jsQR(data, width, height, {\n    inversionAttempts: 'attemptBoth'\n  });\n  let parsed;\n  try {\n    parsed = JSON.parse(decoded);\n  } catch {\n    parsed = decoded;\n  }\n  if (parsed?.data) {\n    const nativeEvent = {\n      type: 'qr',\n      data: parsed.data,\n      cornerPoints: [],\n      bounds: {\n        origin: {\n          x: 0,\n          y: 0\n        },\n        size: {\n          width: 0,\n          height: 0\n        }\n      }\n    };\n    if (parsed.location) {\n      nativeEvent.cornerPoints = [parsed.location.topLeftCorner, parsed.location.bottomLeftCorner, parsed.location.topRightCorner, parsed.location.bottomRightCorner];\n    }\n    return nativeEvent;\n  }\n  return parsed;\n};\nconst createWorkerAsyncFunction = (fn, deps) => {\n  if (typeof window === 'undefined') {\n    return async () => {\n      throw new Error('Cannot use createWorkerAsyncFunction in a non-browser environment');\n    };\n  }\n  const stringifiedFn = [`self.func = ${fn.toString()};`, 'self.onmessage = (e) => {', '  const result = self.func(e.data);', '  self.postMessage(result);', '};'];\n  if (deps.length > 0) {\n    stringifiedFn.unshift(`importScripts(${deps.map(dep => `'${dep}'`).join(', ')});`);\n  }\n  const blob = new Blob(stringifiedFn, {\n    type: 'text/javascript'\n  });\n  const worker = new Worker(URL.createObjectURL(blob));\n  const promises = [];\n  worker.onmessage = e => promises.shift()?.resolve(e.data);\n  return data => {\n    return new Promise((resolve, reject) => {\n      promises.push({\n        resolve,\n        reject\n      });\n      worker.postMessage(data);\n    });\n  };\n};\nconst decode = createWorkerAsyncFunction(qrWorkerMethod, ['https://cdn.jsdelivr.net/npm/jsqr@1.2.0/dist/jsQR.min.js']);\nexport function useWebQRScanner(video, {\n  isEnabled,\n  captureOptions,\n  interval,\n  onScanned,\n  onError\n}) {\n  const isRunning = React.useRef(false);\n  const timeout = React.useRef(undefined);\n  async function scanAsync() {\n    if (!isRunning.current || !onScanned) {\n      stop();\n      return;\n    }\n    try {\n      const data = captureImageData(video.current, captureOptions);\n      if (data) {\n        const nativeEvent = await decode(data);\n        if (nativeEvent?.data) {\n          onScanned({\n            nativeEvent\n          });\n        }\n      }\n    } catch (error) {\n      if (onError) {\n        onError({\n          nativeEvent: error\n        });\n      }\n    } finally {\n      if (interval === 0) {\n        stop();\n        return;\n      }\n      const intervalToUse = !interval || interval < 0 ? 16 : interval;\n      timeout.current = setTimeout(() => {\n        scanAsync();\n      }, intervalToUse);\n    }\n  }\n  function stop() {\n    isRunning.current = false;\n    clearTimeout(timeout.current);\n  }\n  React.useEffect(() => {\n    if (isEnabled) {\n      isRunning.current = true;\n      scanAsync();\n    }\n    return () => {\n      if (isEnabled) {\n        stop();\n      }\n    };\n  }, [isEnabled]);\n}","map":{"version":3,"names":["React","captureImageData","qrWorkerMethod","data","width","height","decoded","self","jsQR","inversionAttempts","parsed","JSON","parse","nativeEvent","type","cornerPoints","bounds","origin","x","y","size","location","topLeftCorner","bottomLeftCorner","topRightCorner","bottomRightCorner","createWorkerAsyncFunction","fn","deps","window","Error","stringifiedFn","toString","length","unshift","map","dep","join","blob","Blob","worker","Worker","URL","createObjectURL","promises","onmessage","e","shift","resolve","Promise","reject","push","postMessage","decode","useWebQRScanner","video","isEnabled","captureOptions","interval","onScanned","onError","isRunning","useRef","timeout","undefined","scanAsync","current","stop","error","intervalToUse","setTimeout","clearTimeout","useEffect"],"sources":["C:\\Users\\VCP2909\\Desktop\\AGV\\AGV-MAC2\\agv-mobile\\node_modules\\expo-camera\\src\\web\\useWebQRScanner.ts"],"sourcesContent":["import * as React from 'react';\n\nimport { captureImageData } from './WebCameraUtils';\nimport { BarcodeScanningResult, CameraPictureOptions, MountErrorListener } from '../Camera.types';\n\nconst qrWorkerMethod = ({ data, width, height }: ImageData): any => {\n  // eslint-disable-next-line no-undef\n  const decoded = (self as any).jsQR(data, width, height, {\n    inversionAttempts: 'attemptBoth',\n  });\n\n  let parsed;\n  try {\n    parsed = JSON.parse(decoded);\n  } catch {\n    parsed = decoded;\n  }\n\n  if (parsed?.data) {\n    const nativeEvent: BarcodeScanningResult = {\n      type: 'qr',\n      data: parsed.data,\n      cornerPoints: [],\n      bounds: { origin: { x: 0, y: 0 }, size: { width: 0, height: 0 } },\n    };\n    if (parsed.location) {\n      nativeEvent.cornerPoints = [\n        parsed.location.topLeftCorner,\n        parsed.location.bottomLeftCorner,\n        parsed.location.topRightCorner,\n        parsed.location.bottomRightCorner,\n      ];\n    }\n    return nativeEvent;\n  }\n  return parsed;\n};\n\nconst createWorkerAsyncFunction = <T extends (data: any) => any>(fn: T, deps: string[]) => {\n  if (typeof window === 'undefined') {\n    return async () => {\n      throw new Error('Cannot use createWorkerAsyncFunction in a non-browser environment');\n    };\n  }\n\n  const stringifiedFn = [\n    `self.func = ${fn.toString()};`,\n    'self.onmessage = (e) => {',\n    '  const result = self.func(e.data);',\n    '  self.postMessage(result);',\n    '};',\n  ];\n\n  if (deps.length > 0) {\n    stringifiedFn.unshift(`importScripts(${deps.map((dep) => `'${dep}'`).join(', ')});`);\n  }\n\n  const blob = new Blob(stringifiedFn, { type: 'text/javascript' });\n  const worker = new Worker(URL.createObjectURL(blob));\n\n  // First-In First-Out queue of promises\n  const promises: {\n    resolve: (value: ReturnType<T>) => void;\n    reject: (reason?: any) => void;\n  }[] = [];\n\n  worker.onmessage = (e) => promises.shift()?.resolve(e.data);\n\n  return (data: Parameters<T>[0]) => {\n    return new Promise<ReturnType<T>>((resolve, reject) => {\n      promises.push({ resolve, reject });\n      worker.postMessage(data);\n    });\n  };\n};\n\nconst decode = createWorkerAsyncFunction(qrWorkerMethod, [\n  'https://cdn.jsdelivr.net/npm/jsqr@1.2.0/dist/jsQR.min.js',\n]);\n\nexport function useWebQRScanner(\n  video: React.MutableRefObject<HTMLVideoElement | null>,\n  {\n    isEnabled,\n    captureOptions,\n    interval,\n    onScanned,\n    onError,\n  }: {\n    isEnabled: boolean;\n    captureOptions: Pick<CameraPictureOptions, 'scale' | 'isImageMirror'>;\n    interval?: number;\n    onScanned?: (scanningResult: { nativeEvent: BarcodeScanningResult }) => void;\n    onError?: MountErrorListener;\n  }\n) {\n  const isRunning = React.useRef<boolean>(false);\n  const timeout = React.useRef<number | undefined>(undefined);\n\n  async function scanAsync() {\n    // If interval is 0 then only scan once.\n    if (!isRunning.current || !onScanned) {\n      stop();\n      return;\n    }\n    try {\n      const data = captureImageData(video.current, captureOptions);\n\n      if (data) {\n        const nativeEvent: BarcodeScanningResult | any = await decode(data);\n        if (nativeEvent?.data) {\n          onScanned({\n            nativeEvent,\n          });\n        }\n      }\n    } catch (error: any) {\n      if (onError) {\n        onError({ nativeEvent: error });\n      }\n    } finally {\n      // If interval is 0 then only scan once.\n      if (interval === 0) {\n        stop();\n        return;\n      }\n      const intervalToUse = !interval || interval < 0 ? 16 : interval;\n      // @ts-ignore: Type 'Timeout' is not assignable to type 'number'\n      timeout.current = setTimeout(() => {\n        scanAsync();\n      }, intervalToUse);\n    }\n  }\n\n  function stop() {\n    isRunning.current = false;\n    clearTimeout(timeout.current);\n  }\n\n  React.useEffect(() => {\n    if (isEnabled) {\n      isRunning.current = true;\n      scanAsync();\n    }\n\n    return () => {\n      if (isEnabled) {\n        stop();\n      }\n    };\n  }, [isEnabled]);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}