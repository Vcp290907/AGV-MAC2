{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { TextInput, Button, Card, Title, Paragraph } from 'react-native-paper';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!username.trim() || !password.trim()) {\n        Alert.alert('Erro', 'Por favor, preencha todos os campos');\n        return;\n      }\n      setLoading(true);\n      try {\n        var response = yield fetch('http://192.168.0.134:5000/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: username.trim(),\n            password: password.trim()\n          })\n        });\n        var data = yield response.json();\n        if (data.success) {\n          yield AsyncStorage.setItem('user', JSON.stringify(data.usuario));\n          navigation.replace('Dashboard');\n        } else {\n          Alert.alert('Erro de Login', data.message || 'Credenciais inválidas');\n        }\n      } catch (error) {\n        console.error('Login error:', error);\n        Alert.alert('Erro de Conexão', 'Não foi possível conectar ao servidor. Verifique sua conexão com a internet.');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n    children: _jsxs(ScrollView, {\n      contentContainerStyle: styles.scrollContainer,\n      children: [_jsxs(View, {\n        style: styles.logoContainer,\n        children: [_jsx(View, {\n          style: styles.logoBox,\n          children: _jsx(Title, {\n            style: styles.logoText,\n            children: \"MAC\"\n          })\n        }), _jsx(Title, {\n          style: styles.appTitle,\n          children: \"AGV MOBILE\"\n        }), _jsx(Paragraph, {\n          style: styles.subtitle,\n          children: \"Sistema de Controle de Rob\\xF4 AGV\"\n        })]\n      }), _jsx(Card, {\n        style: styles.card,\n        children: _jsxs(Card.Content, {\n          children: [_jsx(Title, {\n            style: styles.cardTitle,\n            children: \"Login\"\n          }), _jsx(TextInput, {\n            label: \"Usu\\xE1rio\",\n            value: username,\n            onChangeText: setUsername,\n            mode: \"outlined\",\n            style: styles.input,\n            autoCapitalize: \"none\",\n            autoCorrect: false\n          }), _jsx(TextInput, {\n            label: \"Senha\",\n            value: password,\n            onChangeText: setPassword,\n            mode: \"outlined\",\n            style: styles.input,\n            secureTextEntry: true,\n            autoCapitalize: \"none\",\n            autoCorrect: false\n          }), _jsx(Button, {\n            mode: \"contained\",\n            onPress: handleLogin,\n            style: styles.loginButton,\n            loading: loading,\n            disabled: loading,\n            children: loading ? 'Entrando...' : 'Entrar'\n          })]\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f8fafc'\n  },\n  scrollContainer: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    padding: 20\n  },\n  logoContainer: {\n    alignItems: 'center',\n    marginBottom: 40\n  },\n  logoBox: {\n    backgroundColor: '#dc2626',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 8,\n    marginBottom: 20\n  },\n  logoText: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  appTitle: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#1e293b',\n    marginBottom: 8\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#64748b',\n    textAlign: 'center'\n  },\n  card: {\n    marginBottom: 20,\n    elevation: 4\n  },\n  cardTitle: {\n    textAlign: 'center',\n    marginBottom: 20,\n    color: '#1e293b'\n  },\n  input: {\n    marginBottom: 16\n  },\n  loginButton: {\n    marginTop: 10,\n    paddingVertical: 8\n  },\n  demoCard: {\n    backgroundColor: '#fef3c7',\n    borderColor: '#f59e0b',\n    borderWidth: 1\n  },\n  demoTitle: {\n    color: '#92400e',\n    textAlign: 'center',\n    marginBottom: 10\n  },\n  demoText: {\n    color: '#78350f',\n    fontSize: 14,\n    lineHeight: 20\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","StyleSheet","Alert","KeyboardAvoidingView","Platform","ScrollView","TextInput","Button","Card","Title","Paragraph","AsyncStorage","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","loading","setLoading","handleLogin","_ref2","_asyncToGenerator","trim","alert","response","fetch","method","headers","body","JSON","stringify","data","json","success","setItem","usuario","replace","message","error","console","apply","arguments","style","styles","container","behavior","OS","children","contentContainerStyle","scrollContainer","logoContainer","logoBox","logoText","appTitle","subtitle","card","Content","cardTitle","label","value","onChangeText","mode","input","autoCapitalize","autoCorrect","secureTextEntry","onPress","loginButton","disabled","create","flex","backgroundColor","flexGrow","justifyContent","padding","alignItems","marginBottom","paddingHorizontal","paddingVertical","borderRadius","color","fontSize","fontWeight","textAlign","elevation","marginTop","demoCard","borderColor","borderWidth","demoTitle","demoText","lineHeight"],"sources":["C:/Users/VCP2909/Desktop/AGV/AGV-MAC2/agv-mobile/src/screens/LoginScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Alert,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  ScrollView,\r\n} from 'react-native';\r\nimport {\r\n  TextInput,\r\n  Button,\r\n  Card,\r\n  Title,\r\n  Paragraph,\r\n  ActivityIndicator,\r\n} from 'react-native-paper';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\ninterface LoginScreenProps {\r\n  navigation: any;\r\n}\r\n\r\nconst LoginScreen: React.FC<LoginScreenProps> = ({ navigation }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleLogin = async () => {\r\n    if (!username.trim() || !password.trim()) {\r\n      Alert.alert('Erro', 'Por favor, preencha todos os campos');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      // const response = await fetch('http://10.0.2.2:5000/login', { // For Android emulator\r\n      // const response = await fetch('http://localhost:5000/login', { // For iOS simulator\r\n      const response = await fetch('http://192.168.0.134:5000/login', { // For physical device (your PC IP)\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          username: username.trim(),\r\n          password: password.trim(),\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        // Save user data to AsyncStorage\r\n        await AsyncStorage.setItem('user', JSON.stringify(data.usuario));\r\n\r\n        // Navigate to Dashboard\r\n        navigation.replace('Dashboard');\r\n      } else {\r\n        Alert.alert('Erro de Login', data.message || 'Credenciais inválidas');\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      Alert.alert(\r\n        'Erro de Conexão',\r\n        'Não foi possível conectar ao servidor. Verifique sua conexão com a internet.'\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n      style={styles.container}\r\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n    >\r\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\r\n        {/* Logo/Title Section */}\r\n        <View style={styles.logoContainer}>\r\n          <View style={styles.logoBox}>\r\n            <Title style={styles.logoText}>MAC</Title>\r\n          </View>\r\n          <Title style={styles.appTitle}>AGV MOBILE</Title>\r\n          <Paragraph style={styles.subtitle}>\r\n            Sistema de Controle de Robô AGV\r\n          </Paragraph>\r\n        </View>\r\n\r\n        {/* Login Form */}\r\n        <Card style={styles.card}>\r\n          <Card.Content>\r\n            <Title style={styles.cardTitle}>Login</Title>\r\n\r\n            <TextInput\r\n              label=\"Usuário\"\r\n              value={username}\r\n              onChangeText={setUsername}\r\n              mode=\"outlined\"\r\n              style={styles.input}\r\n              autoCapitalize=\"none\"\r\n              autoCorrect={false}\r\n            />\r\n\r\n            <TextInput\r\n              label=\"Senha\"\r\n              value={password}\r\n              onChangeText={setPassword}\r\n              mode=\"outlined\"\r\n              style={styles.input}\r\n              secureTextEntry\r\n              autoCapitalize=\"none\"\r\n              autoCorrect={false}\r\n            />\r\n\r\n            <Button\r\n              mode=\"contained\"\r\n              onPress={handleLogin}\r\n              style={styles.loginButton}\r\n              loading={loading}\r\n              disabled={loading}\r\n            >\r\n              {loading ? 'Entrando...' : 'Entrar'}\r\n            </Button>\r\n          </Card.Content>\r\n        </Card>\r\n      </ScrollView>\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f8fafc',\r\n  },\r\n  scrollContainer: {\r\n    flexGrow: 1,\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n  },\r\n  logoContainer: {\r\n    alignItems: 'center',\r\n    marginBottom: 40,\r\n  },\r\n  logoBox: {\r\n    backgroundColor: '#dc2626',\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 10,\r\n    borderRadius: 8,\r\n    marginBottom: 20,\r\n  },\r\n  logoText: {\r\n    color: 'white',\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n  },\r\n  appTitle: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    color: '#1e293b',\r\n    marginBottom: 8,\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    color: '#64748b',\r\n    textAlign: 'center',\r\n  },\r\n  card: {\r\n    marginBottom: 20,\r\n    elevation: 4,\r\n  },\r\n  cardTitle: {\r\n    textAlign: 'center',\r\n    marginBottom: 20,\r\n    color: '#1e293b',\r\n  },\r\n  input: {\r\n    marginBottom: 16,\r\n  },\r\n  loginButton: {\r\n    marginTop: 10,\r\n    paddingVertical: 8,\r\n  },\r\n  demoCard: {\r\n    backgroundColor: '#fef3c7',\r\n    borderColor: '#f59e0b',\r\n    borderWidth: 1,\r\n  },\r\n  demoTitle: {\r\n    color: '#92400e',\r\n    textAlign: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  demoText: {\r\n    color: '#78350f',\r\n    fontSize: 14,\r\n    lineHeight: 20,\r\n  },\r\n});\r\n\r\nexport default LoginScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}