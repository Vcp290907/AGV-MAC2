{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport { StatusBar } from 'expo-status-bar';\nimport LoginScreen from \"./src/screens/LoginScreen\";\nimport DashboardScreen from \"./src/screens/DashboardScreen\";\nimport OrderScreen from \"./src/screens/OrderScreen\";\nimport StatusScreen from \"./src/screens/StatusScreen\";\nimport { theme } from \"./src/theme/theme\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsx(PaperProvider, {\n    theme: theme,\n    children: _jsxs(NavigationContainer, {\n      children: [_jsx(StatusBar, {\n        style: \"light\",\n        backgroundColor: theme.colors.primary\n      }), _jsxs(Stack.Navigator, {\n        initialRouteName: \"Login\",\n        screenOptions: {\n          headerStyle: {\n            backgroundColor: theme.colors.primary\n          },\n          headerTintColor: '#fff',\n          headerTitleStyle: {\n            fontWeight: 'bold'\n          }\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Dashboard\",\n          component: DashboardScreen,\n          options: {\n            title: 'AGV Dashboard'\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Orders\",\n          component: OrderScreen,\n          options: {\n            title: 'Pedidos'\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Status\",\n          component: StatusScreen,\n          options: {\n            title: 'Status AGV'\n          }\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","Provider","PaperProvider","StatusBar","LoginScreen","DashboardScreen","OrderScreen","StatusScreen","theme","jsx","_jsx","jsxs","_jsxs","Stack","App","children","style","backgroundColor","colors","primary","Navigator","initialRouteName","screenOptions","headerStyle","headerTintColor","headerTitleStyle","fontWeight","Screen","name","component","options","headerShown","title"],"sources":["C:/Users/VCP2909/Desktop/AGV/AGV-MAC2/agv-mobile/App.tsx"],"sourcesContent":["import React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { Provider as PaperProvider } from 'react-native-paper';\r\nimport { StatusBar } from 'expo-status-bar';\r\n\r\n// Import screens\r\nimport LoginScreen from './src/screens/LoginScreen';\r\nimport DashboardScreen from './src/screens/DashboardScreen';\r\nimport OrderScreen from './src/screens/OrderScreen';\r\nimport StatusScreen from './src/screens/StatusScreen';\r\n\r\n// Import theme\r\nimport { theme } from './src/theme/theme';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function App() {\r\n  return (\r\n    <PaperProvider theme={theme}>\r\n      <NavigationContainer>\r\n        <StatusBar style=\"light\" backgroundColor={theme.colors.primary} />\r\n        <Stack.Navigator\r\n          initialRouteName=\"Login\"\r\n          screenOptions={{\r\n            headerStyle: {\r\n              backgroundColor: theme.colors.primary,\r\n            },\r\n            headerTintColor: '#fff',\r\n            headerTitleStyle: {\r\n              fontWeight: 'bold',\r\n            },\r\n          }}\r\n        >\r\n          <Stack.Screen\r\n            name=\"Login\"\r\n            component={LoginScreen}\r\n            options={{ headerShown: false }}\r\n          />\r\n          <Stack.Screen\r\n            name=\"Dashboard\"\r\n            component={DashboardScreen}\r\n            options={{ title: 'AGV Dashboard' }}\r\n          />\r\n          <Stack.Screen\r\n            name=\"Orders\"\r\n            component={OrderScreen}\r\n            options={{ title: 'Pedidos' }}\r\n          />\r\n          <Stack.Screen\r\n            name=\"Status\"\r\n            component={StatusScreen}\r\n            options={{ title: 'Status AGV' }}\r\n          />\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    </PaperProvider>\r\n  );\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,QAAQ,IAAIC,aAAa,QAAQ,oBAAoB;AAC9D,SAASC,SAAS,QAAQ,iBAAiB;AAG3C,OAAOC,WAAW;AAClB,OAAOC,eAAe;AACtB,OAAOC,WAAW;AAClB,OAAOC,YAAY;AAGnB,SAASC,KAAK;AAA4B,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAE1C,IAAMC,KAAK,GAAGb,0BAA0B,CAAC,CAAC;AAE1C,eAAe,SAASc,GAAGA,CAAA,EAAG;EAC5B,OACEJ,IAAA,CAACR,aAAa;IAACM,KAAK,EAAEA,KAAM;IAAAO,QAAA,EAC1BH,KAAA,CAACb,mBAAmB;MAAAgB,QAAA,GAClBL,IAAA,CAACP,SAAS;QAACa,KAAK,EAAC,OAAO;QAACC,eAAe,EAAET,KAAK,CAACU,MAAM,CAACC;MAAQ,CAAE,CAAC,EAClEP,KAAA,CAACC,KAAK,CAACO,SAAS;QACdC,gBAAgB,EAAC,OAAO;QACxBC,aAAa,EAAE;UACbC,WAAW,EAAE;YACXN,eAAe,EAAET,KAAK,CAACU,MAAM,CAACC;UAChC,CAAC;UACDK,eAAe,EAAE,MAAM;UACvBC,gBAAgB,EAAE;YAChBC,UAAU,EAAE;UACd;QACF,CAAE;QAAAX,QAAA,GAEFL,IAAA,CAACG,KAAK,CAACc,MAAM;UACXC,IAAI,EAAC,OAAO;UACZC,SAAS,EAAEzB,WAAY;UACvB0B,OAAO,EAAE;YAAEC,WAAW,EAAE;UAAM;QAAE,CACjC,CAAC,EACFrB,IAAA,CAACG,KAAK,CAACc,MAAM;UACXC,IAAI,EAAC,WAAW;UAChBC,SAAS,EAAExB,eAAgB;UAC3ByB,OAAO,EAAE;YAAEE,KAAK,EAAE;UAAgB;QAAE,CACrC,CAAC,EACFtB,IAAA,CAACG,KAAK,CAACc,MAAM;UACXC,IAAI,EAAC,QAAQ;UACbC,SAAS,EAAEvB,WAAY;UACvBwB,OAAO,EAAE;YAAEE,KAAK,EAAE;UAAU;QAAE,CAC/B,CAAC,EACFtB,IAAA,CAACG,KAAK,CAACc,MAAM;UACXC,IAAI,EAAC,QAAQ;UACbC,SAAS,EAAEtB,YAAa;UACxBuB,OAAO,EAAE;YAAEE,KAAK,EAAE;UAAa;QAAE,CAClC,CAAC;MAAA,CACa,CAAC;IAAA,CACC;EAAC,CACT,CAAC;AAEpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}