{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vcp_2\\\\Desktop\\\\Bentao\\\\TCC\\\\AGV-MAC2\\\\agv-mobile\\\\src\\\\screens\\\\OrderScreen.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Card, Title, Paragraph, Button, Chip, FAB } from 'react-native-paper';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderScreen = ({\n  navigation,\n  route\n}) => {\n  const [items, setItems] = useState([]);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [devices, setDevices] = useState([]);\n  const [selectedDevice, setSelectedDevice] = useState(null);\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    loadData();\n    const itemParaAdicionar = route.params?.itemParaAdicionar;\n    if (itemParaAdicionar) {\n      adicionarItemDoQR(itemParaAdicionar);\n    }\n  }, [route.params]);\n  const loadData = async () => {\n    try {\n      const itemsResponse = await fetch('http://192.168.0.134:5000/itens');\n      const itemsData = await itemsResponse.json();\n      setItems(itemsData);\n      const devicesResponse = await fetch('http://192.168.0.134:5000/dispositivos/disponiveis');\n      const devicesData = await devicesResponse.json();\n      setDevices(devicesData);\n      const ordersResponse = await fetch('http://192.168.0.134:5000/pedidos');\n      const ordersData = await ordersResponse.json();\n      setOrders(ordersData);\n    } catch (error) {\n      console.error('Error loading data:', error);\n    }\n  };\n  const adicionarItemDoQR = item => {\n    const jaSelecionado = selectedItems.find(i => i.id === item.id);\n    if (jaSelecionado) {\n      Alert.alert('Atenção', 'Este item já foi adicionado ao pedido!');\n      return;\n    }\n    if (selectedItems.length >= 4) {\n      Alert.alert('Limite Atingido', 'Máximo de 4 itens por pedido!');\n      return;\n    }\n    setSelectedItems([...selectedItems, item]);\n    Alert.alert('Item Adicionado!', `${item.nome} foi adicionado ao seu pedido.`);\n  };\n  const toggleItemSelection = item => {\n    setSelectedItems(prev => {\n      const isSelected = prev.find(i => i.id === item.id);\n      if (isSelected) {\n        return prev.filter(i => i.id !== item.id);\n      } else if (prev.length < 4) {\n        return [...prev, item];\n      }\n      return prev;\n    });\n  };\n  const createOrder = async () => {\n    if (selectedItems.length === 0) {\n      alert('Selecione pelo menos um item');\n      return;\n    }\n    if (!selectedDevice) {\n      alert('Selecione um dispositivo');\n      return;\n    }\n    setLoading(true);\n    try {\n      const userData = await AsyncStorage.getItem('user');\n      const user = JSON.parse(userData || '{}');\n      const response = await fetch('http://192.168.0.134:5000/pedidos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          usuario_id: user.id,\n          itens: selectedItems.map(item => item.id),\n          dispositivo_id: selectedDevice\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        alert('Pedido criado com sucesso!');\n        setSelectedItems([]);\n        setSelectedDevice(null);\n        loadData();\n      } else {\n        alert('Erro ao criar pedido: ' + data.error);\n      }\n    } catch (error) {\n      console.error('Error creating order:', error);\n      alert('Erro ao criar pedido');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case 'pendente':\n        return '#f59e0b';\n      case 'em_andamento':\n        return '#2563eb';\n      case 'coletando':\n        return '#7c3aed';\n      case 'concluido':\n        return '#16a34a';\n      case 'cancelado':\n        return '#dc2626';\n      default:\n        return '#64748b';\n    }\n  };\n  const renderItem = ({\n    item\n  }) => {\n    const isSelected = selectedItems.find(i => i.id === item.id);\n    return _jsxDEV(Card, {\n      style: [styles.itemCard, isSelected && styles.selectedItemCard],\n      onPress: () => toggleItemSelection(item),\n      children: _jsxDEV(Card.Content, {\n        style: styles.itemContent,\n        children: [_jsxDEV(View, {\n          style: styles.itemInfo,\n          children: [_jsxDEV(Title, {\n            style: styles.itemName,\n            children: item.nome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), _jsxDEV(Paragraph, {\n            style: styles.itemTag,\n            children: [\"Tag: \", item.tag]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), _jsxDEV(Paragraph, {\n            style: styles.itemCategory,\n            children: item.categoria\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), isSelected && _jsxDEV(View, {\n          style: styles.checkmark,\n          children: _jsxDEV(Title, {\n            style: styles.checkmarkText,\n            children: \"\\u2713\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this);\n  };\n  const renderOrder = ({\n    item\n  }) => _jsxDEV(Card, {\n    style: styles.orderCard,\n    children: _jsxDEV(Card.Content, {\n      children: [_jsxDEV(View, {\n        style: styles.orderHeader,\n        children: [_jsxDEV(Title, {\n          style: styles.orderTitle,\n          children: [\"Pedido #\", item.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), _jsxDEV(Chip, {\n          style: [styles.statusChip, {\n            backgroundColor: getStatusColor(item.status)\n          }],\n          textStyle: styles.statusText,\n          children: item.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), _jsxDEV(Paragraph, {\n        style: styles.orderUser,\n        children: item.usuario_nome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), _jsxDEV(Paragraph, {\n        style: styles.orderDevice,\n        children: item.dispositivo_nome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), _jsxDEV(Paragraph, {\n        style: styles.orderItems,\n        children: [\"Itens: \", item.itens?.split(',').length || 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), _jsxDEV(Paragraph, {\n        style: styles.orderDate,\n        children: new Date(item.created_at).toLocaleDateString('pt-BR')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(ScrollView, {\n      style: styles.scrollContainer,\n      children: [_jsxDEV(Card, {\n        style: styles.sectionCard,\n        children: _jsxDEV(Card.Content, {\n          children: [_jsxDEV(Title, {\n            style: styles.sectionTitle,\n            children: \"Selecionar Dispositivo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: styles.devicesContainer,\n            children: devices.map(device => _jsxDEV(Button, {\n              mode: selectedDevice === device.id ? 'contained' : 'outlined',\n              onPress: () => setSelectedDevice(device.id),\n              style: styles.deviceButton,\n              children: [device.nome, \" (\\uD83D\\uDD0B\", device.bateria, \"%)\"]\n            }, device.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), selectedItems.length > 0 && _jsxDEV(Card, {\n        style: styles.sectionCard,\n        children: _jsxDEV(Card.Content, {\n          children: [_jsxDEV(Title, {\n            style: styles.sectionTitle,\n            children: [\"Itens Selecionados (\", selectedItems.length, \"/4)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: styles.selectedItemsContainer,\n            children: selectedItems.map(item => _jsxDEV(Chip, {\n              style: styles.selectedItemChip,\n              onClose: () => toggleItemSelection(item),\n              children: item.nome\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), _jsxDEV(View, {\n        style: styles.actionContainer,\n        children: _jsxDEV(Button, {\n          mode: \"contained\",\n          onPress: createOrder,\n          loading: loading,\n          disabled: loading || selectedItems.length === 0 || !selectedDevice,\n          style: styles.createOrderButton,\n          children: loading ? 'Criando...' : 'Criar Pedido'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), _jsxDEV(Card, {\n        style: styles.sectionCard,\n        children: _jsxDEV(Card.Content, {\n          children: [_jsxDEV(Title, {\n            style: styles.sectionTitle,\n            children: \"Pedidos Recentes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), _jsxDEV(FlatList, {\n            data: orders.slice(0, 5),\n            renderItem: renderOrder,\n            keyExtractor: item => item.id.toString(),\n            scrollEnabled: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), _jsxDEV(FAB, {\n      icon: \"plus\",\n      style: styles.fab,\n      onPress: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f8fafc'\n  },\n  scrollContainer: {\n    flex: 1,\n    padding: 15\n  },\n  sectionCard: {\n    marginBottom: 15,\n    elevation: 3\n  },\n  sectionTitle: {\n    marginBottom: 15\n  },\n  devicesContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10\n  },\n  deviceButton: {\n    marginRight: 10,\n    marginBottom: 10\n  },\n  selectedItemsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8\n  },\n  selectedItemChip: {\n    backgroundColor: '#dbeafe'\n  },\n  actionContainer: {\n    marginBottom: 15\n  },\n  createOrderButton: {\n    paddingVertical: 8\n  },\n  itemCard: {\n    marginBottom: 10,\n    elevation: 2\n  },\n  selectedItemCard: {\n    backgroundColor: '#dbeafe',\n    borderColor: '#2563eb',\n    borderWidth: 2\n  },\n  itemContent: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  itemInfo: {\n    flex: 1\n  },\n  itemName: {\n    fontSize: 16\n  },\n  itemTag: {\n    fontSize: 12,\n    color: '#64748b'\n  },\n  itemCategory: {\n    fontSize: 12,\n    color: '#64748b'\n  },\n  checkmark: {\n    width: 30,\n    height: 30,\n    borderRadius: 15,\n    backgroundColor: '#16a34a',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  checkmarkText: {\n    color: 'white',\n    fontSize: 16\n  },\n  orderCard: {\n    marginBottom: 10,\n    elevation: 2\n  },\n  orderHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  orderTitle: {\n    fontSize: 16\n  },\n  statusChip: {\n    height: 28\n  },\n  statusText: {\n    color: 'white',\n    fontSize: 12\n  },\n  orderUser: {\n    fontSize: 14,\n    color: '#64748b'\n  },\n  orderDevice: {\n    fontSize: 14,\n    color: '#64748b'\n  },\n  orderItems: {\n    fontSize: 14,\n    color: '#64748b'\n  },\n  orderDate: {\n    fontSize: 12,\n    color: '#94a3b8'\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n    backgroundColor: '#2563eb'\n  }\n});\nexport default OrderScreen;","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","ScrollView","FlatList","Alert","Card","Title","Paragraph","Button","Chip","FAB","AsyncStorage","jsxDEV","_jsxDEV","OrderScreen","navigation","route","items","setItems","selectedItems","setSelectedItems","devices","setDevices","selectedDevice","setSelectedDevice","orders","setOrders","loading","setLoading","loadData","itemParaAdicionar","params","adicionarItemDoQR","itemsResponse","fetch","itemsData","json","devicesResponse","devicesData","ordersResponse","ordersData","error","console","item","jaSelecionado","find","i","id","alert","length","nome","toggleItemSelection","prev","isSelected","filter","createOrder","userData","getItem","user","JSON","parse","response","method","headers","body","stringify","usuario_id","itens","map","dispositivo_id","data","success","getStatusColor","status","renderItem","style","styles","itemCard","selectedItemCard","onPress","children","Content","itemContent","itemInfo","itemName","fileName","_jsxFileName","lineNumber","columnNumber","itemTag","tag","itemCategory","categoria","checkmark","checkmarkText","renderOrder","orderCard","orderHeader","orderTitle","statusChip","backgroundColor","textStyle","statusText","orderUser","usuario_nome","orderDevice","dispositivo_nome","orderItems","split","orderDate","Date","created_at","toLocaleDateString","container","scrollContainer","sectionCard","sectionTitle","devicesContainer","device","mode","deviceButton","bateria","selectedItemsContainer","selectedItemChip","onClose","actionContainer","disabled","createOrderButton","slice","keyExtractor","toString","scrollEnabled","icon","fab","create","flex","padding","marginBottom","elevation","flexDirection","flexWrap","gap","marginRight","paddingVertical","borderColor","borderWidth","alignItems","fontSize","color","width","height","borderRadius","justifyContent","position","margin","right","bottom"],"sources":["C:/Users/vcp_2/Desktop/Bentao/TCC/AGV-MAC2/agv-mobile/src/screens/OrderScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet, ScrollView, FlatList, Alert } from 'react-native';\r\nimport { Card, Title, Paragraph, Button, Chip, FAB } from 'react-native-paper';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\ninterface OrderScreenProps {\r\n  navigation: any;\r\n  route: any;\r\n}\r\n\r\ninterface Item {\r\n  id: number;\r\n  nome: string;\r\n  tag: string;\r\n  categoria: string;\r\n}\r\n\r\ninterface Order {\r\n  id: number;\r\n  usuario_nome: string;\r\n  status: string;\r\n  created_at: string;\r\n  itens: string;\r\n  dispositivo_nome: string;\r\n}\r\n\r\nconst OrderScreen: React.FC<OrderScreenProps> = ({ navigation, route }) => {\r\n  const [items, setItems] = useState<Item[]>([]);\r\n  const [selectedItems, setSelectedItems] = useState<Item[]>([]);\r\n  const [devices, setDevices] = useState<any[]>([]);\r\n  const [selectedDevice, setSelectedDevice] = useState<number | null>(null);\r\n  const [orders, setOrders] = useState<Order[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n\r\n    // Verificar se há um item para adicionar (vindo do QR Scanner)\r\n    const itemParaAdicionar = route.params?.itemParaAdicionar;\r\n    if (itemParaAdicionar) {\r\n      adicionarItemDoQR(itemParaAdicionar);\r\n    }\r\n  }, [route.params]);\r\n\r\n  const loadData = async () => {\r\n    try {\r\n      // Load items\r\n      // const itemsResponse = await fetch('http://10.0.2.2:5000/itens'); // For Android emulator\r\n      // const itemsResponse = await fetch('http://localhost:5000/itens'); // For iOS simulator\r\n      const itemsResponse = await fetch('http://192.168.0.134:5000/itens'); // For physical device (your PC IP)\r\n      const itemsData = await itemsResponse.json();\r\n      setItems(itemsData);\r\n\r\n      // Load available devices\r\n      // const devicesResponse = await fetch('http://10.0.2.2:5000/dispositivos/disponiveis'); // For Android emulator\r\n      // const devicesResponse = await fetch('http://localhost:5000/dispositivos/disponiveis'); // For iOS simulator\r\n      const devicesResponse = await fetch('http://192.168.0.134:5000/dispositivos/disponiveis'); // For physical device (your PC IP)\r\n      const devicesData = await devicesResponse.json();\r\n      setDevices(devicesData);\r\n\r\n      // Load orders\r\n      // const ordersResponse = await fetch('http://10.0.2.2:5000/pedidos'); // For Android emulator\r\n      // const ordersResponse = await fetch('http://localhost:5000/pedidos'); // For iOS simulator\r\n      const ordersResponse = await fetch('http://192.168.0.134:5000/pedidos'); // For physical device (your PC IP)\r\n      const ordersData = await ordersResponse.json();\r\n      setOrders(ordersData);\r\n    } catch (error) {\r\n      console.error('Error loading data:', error);\r\n    }\r\n  };\r\n\r\n  const adicionarItemDoQR = (item: Item) => {\r\n    // Verificar se o item já foi selecionado\r\n    const jaSelecionado = selectedItems.find(i => i.id === item.id);\r\n    if (jaSelecionado) {\r\n      Alert.alert('Atenção', 'Este item já foi adicionado ao pedido!');\r\n      return;\r\n    }\r\n\r\n    // Verificar limite de itens\r\n    if (selectedItems.length >= 4) {\r\n      Alert.alert('Limite Atingido', 'Máximo de 4 itens por pedido!');\r\n      return;\r\n    }\r\n\r\n    // Adicionar item à lista selecionada\r\n    setSelectedItems([...selectedItems, item]);\r\n\r\n    // Mostrar confirmação\r\n    Alert.alert('Item Adicionado!', `${item.nome} foi adicionado ao seu pedido.`);\r\n  };\r\n\r\n  const toggleItemSelection = (item: Item) => {\r\n    setSelectedItems(prev => {\r\n      const isSelected = prev.find(i => i.id === item.id);\r\n      if (isSelected) {\r\n        return prev.filter(i => i.id !== item.id);\r\n      } else if (prev.length < 4) {\r\n        return [...prev, item];\r\n      }\r\n      return prev;\r\n    });\r\n  };\r\n\r\n  const createOrder = async () => {\r\n    if (selectedItems.length === 0) {\r\n      alert('Selecione pelo menos um item');\r\n      return;\r\n    }\r\n\r\n    if (!selectedDevice) {\r\n      alert('Selecione um dispositivo');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const userData = await AsyncStorage.getItem('user');\r\n      const user = JSON.parse(userData || '{}');\r\n\r\n      // const response = await fetch('http://10.0.2.2:5000/pedidos', { // For Android emulator\r\n      // const response = await fetch('http://localhost:5000/pedidos', { // For iOS simulator\r\n      const response = await fetch('http://192.168.0.134:5000/pedidos', { // For physical device (your PC IP)\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          usuario_id: user.id,\r\n          itens: selectedItems.map(item => item.id),\r\n          dispositivo_id: selectedDevice,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        alert('Pedido criado com sucesso!');\r\n        setSelectedItems([]);\r\n        setSelectedDevice(null);\r\n        loadData(); // Refresh data\r\n      } else {\r\n        alert('Erro ao criar pedido: ' + data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating order:', error);\r\n      alert('Erro ao criar pedido');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'pendente': return '#f59e0b';\r\n      case 'em_andamento': return '#2563eb';\r\n      case 'coletando': return '#7c3aed';\r\n      case 'concluido': return '#16a34a';\r\n      case 'cancelado': return '#dc2626';\r\n      default: return '#64748b';\r\n    }\r\n  };\r\n\r\n  const renderItem = ({ item }: { item: Item }) => {\r\n    const isSelected = selectedItems.find(i => i.id === item.id);\r\n\r\n    return (\r\n      <Card\r\n        style={[styles.itemCard, isSelected && styles.selectedItemCard]}\r\n        onPress={() => toggleItemSelection(item)}\r\n      >\r\n        <Card.Content style={styles.itemContent}>\r\n          <View style={styles.itemInfo}>\r\n            <Title style={styles.itemName}>{item.nome}</Title>\r\n            <Paragraph style={styles.itemTag}>Tag: {item.tag}</Paragraph>\r\n            <Paragraph style={styles.itemCategory}>{item.categoria}</Paragraph>\r\n          </View>\r\n          {isSelected && (\r\n            <View style={styles.checkmark}>\r\n              <Title style={styles.checkmarkText}>✓</Title>\r\n            </View>\r\n          )}\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  const renderOrder = ({ item }: { item: Order }) => (\r\n    <Card style={styles.orderCard}>\r\n      <Card.Content>\r\n        <View style={styles.orderHeader}>\r\n          <Title style={styles.orderTitle}>Pedido #{item.id}</Title>\r\n          <Chip\r\n            style={[styles.statusChip, { backgroundColor: getStatusColor(item.status) }]}\r\n            textStyle={styles.statusText}\r\n          >\r\n            {item.status}\r\n          </Chip>\r\n        </View>\r\n        <Paragraph style={styles.orderUser}>{item.usuario_nome}</Paragraph>\r\n        <Paragraph style={styles.orderDevice}>{item.dispositivo_nome}</Paragraph>\r\n        <Paragraph style={styles.orderItems}>\r\n          Itens: {item.itens?.split(',').length || 0}\r\n        </Paragraph>\r\n        <Paragraph style={styles.orderDate}>\r\n          {new Date(item.created_at).toLocaleDateString('pt-BR')}\r\n        </Paragraph>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ScrollView style={styles.scrollContainer}>\r\n        {/* Device Selection */}\r\n        <Card style={styles.sectionCard}>\r\n          <Card.Content>\r\n            <Title style={styles.sectionTitle}>Selecionar Dispositivo</Title>\r\n            <View style={styles.devicesContainer}>\r\n              {devices.map(device => (\r\n                <Button\r\n                  key={device.id}\r\n                  mode={selectedDevice === device.id ? 'contained' : 'outlined'}\r\n                  onPress={() => setSelectedDevice(device.id)}\r\n                  style={styles.deviceButton}\r\n                >\r\n                  {device.nome} (🔋{device.bateria}%)\r\n                </Button>\r\n              ))}\r\n            </View>\r\n          </Card.Content>\r\n        </Card>\r\n\r\n        {/* Selected Items */}\r\n        {selectedItems.length > 0 && (\r\n          <Card style={styles.sectionCard}>\r\n            <Card.Content>\r\n              <Title style={styles.sectionTitle}>\r\n                Itens Selecionados ({selectedItems.length}/4)\r\n              </Title>\r\n              <View style={styles.selectedItemsContainer}>\r\n                {selectedItems.map(item => (\r\n                  <Chip\r\n                    key={item.id}\r\n                    style={styles.selectedItemChip}\r\n                    onClose={() => toggleItemSelection(item)}\r\n                  >\r\n                    {item.nome}\r\n                  </Chip>\r\n                ))}\r\n              </View>\r\n            </Card.Content>\r\n          </Card>\r\n        )}\r\n\r\n        {/* Create Order Button */}\r\n        <View style={styles.actionContainer}>\r\n          <Button\r\n            mode=\"contained\"\r\n            onPress={createOrder}\r\n            loading={loading}\r\n            disabled={loading || selectedItems.length === 0 || !selectedDevice}\r\n            style={styles.createOrderButton}\r\n          >\r\n            {loading ? 'Criando...' : 'Criar Pedido'}\r\n          </Button>\r\n        </View>\r\n\r\n        {/* Recent Orders */}\r\n        <Card style={styles.sectionCard}>\r\n          <Card.Content>\r\n            <Title style={styles.sectionTitle}>Pedidos Recentes</Title>\r\n            <FlatList\r\n              data={orders.slice(0, 5)}\r\n              renderItem={renderOrder}\r\n              keyExtractor={item => item.id.toString()}\r\n              scrollEnabled={false}\r\n            />\r\n          </Card.Content>\r\n        </Card>\r\n      </ScrollView>\r\n\r\n      {/* Items Selection FAB */}\r\n      <FAB\r\n        icon=\"plus\"\r\n        style={styles.fab}\r\n        onPress={() => {/* Navigate to item selection */}}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f8fafc',\r\n  },\r\n  scrollContainer: {\r\n    flex: 1,\r\n    padding: 15,\r\n  },\r\n  sectionCard: {\r\n    marginBottom: 15,\r\n    elevation: 3,\r\n  },\r\n  sectionTitle: {\r\n    marginBottom: 15,\r\n  },\r\n  devicesContainer: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    gap: 10,\r\n  },\r\n  deviceButton: {\r\n    marginRight: 10,\r\n    marginBottom: 10,\r\n  },\r\n  selectedItemsContainer: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    gap: 8,\r\n  },\r\n  selectedItemChip: {\r\n    backgroundColor: '#dbeafe',\r\n  },\r\n  actionContainer: {\r\n    marginBottom: 15,\r\n  },\r\n  createOrderButton: {\r\n    paddingVertical: 8,\r\n  },\r\n  itemCard: {\r\n    marginBottom: 10,\r\n    elevation: 2,\r\n  },\r\n  selectedItemCard: {\r\n    backgroundColor: '#dbeafe',\r\n    borderColor: '#2563eb',\r\n    borderWidth: 2,\r\n  },\r\n  itemContent: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  itemInfo: {\r\n    flex: 1,\r\n  },\r\n  itemName: {\r\n    fontSize: 16,\r\n  },\r\n  itemTag: {\r\n    fontSize: 12,\r\n    color: '#64748b',\r\n  },\r\n  itemCategory: {\r\n    fontSize: 12,\r\n    color: '#64748b',\r\n  },\r\n  checkmark: {\r\n    width: 30,\r\n    height: 30,\r\n    borderRadius: 15,\r\n    backgroundColor: '#16a34a',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  checkmarkText: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n  },\r\n  orderCard: {\r\n    marginBottom: 10,\r\n    elevation: 2,\r\n  },\r\n  orderHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  orderTitle: {\r\n    fontSize: 16,\r\n  },\r\n  statusChip: {\r\n    height: 28,\r\n  },\r\n  statusText: {\r\n    color: 'white',\r\n    fontSize: 12,\r\n  },\r\n  orderUser: {\r\n    fontSize: 14,\r\n    color: '#64748b',\r\n  },\r\n  orderDevice: {\r\n    fontSize: 14,\r\n    color: '#64748b',\r\n  },\r\n  orderItems: {\r\n    fontSize: 14,\r\n    color: '#64748b',\r\n  },\r\n  orderDate: {\r\n    fontSize: 12,\r\n    color: '#94a3b8',\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    margin: 16,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: '#2563eb',\r\n  },\r\n});\r\n\r\nexport default OrderScreen;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,KAAA;AAEnD,SAASC,IAAI,EAAEC,KAAK,EAAEC,SAAS,EAAEC,MAAM,EAAEC,IAAI,EAAEC,GAAG,QAAQ,oBAAoB;AAC9E,OAAOC,YAAY,MAAM,2CAA2C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAuBrE,MAAMC,WAAuC,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAM,CAAC,KAAK;EACzE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACqB,aAAa,EAAEC,gBAAgB,CAAC,GAAGtB,QAAQ,CAAS,EAAE,CAAC;EAC9D,MAAM,CAACuB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAQ,EAAE,CAAC;EACjD,MAAM,CAACyB,cAAc,EAAEC,iBAAiB,CAAC,GAAG1B,QAAQ,CAAgB,IAAI,CAAC;EACzE,MAAM,CAAC2B,MAAM,EAAEC,SAAS,CAAC,GAAG5B,QAAQ,CAAU,EAAE,CAAC;EACjD,MAAM,CAAC6B,OAAO,EAAEC,UAAU,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd8B,QAAQ,CAAC,CAAC;IAGV,MAAMC,iBAAiB,GAAGd,KAAK,CAACe,MAAM,EAAED,iBAAiB;IACzD,IAAIA,iBAAiB,EAAE;MACrBE,iBAAiB,CAACF,iBAAiB,CAAC;IACtC;EACF,CAAC,EAAE,CAACd,KAAK,CAACe,MAAM,CAAC,CAAC;EAElB,MAAMF,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MAIF,MAAMI,aAAa,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;MACpE,MAAMC,SAAS,GAAG,MAAMF,aAAa,CAACG,IAAI,CAAC,CAAC;MAC5ClB,QAAQ,CAACiB,SAAS,CAAC;MAKnB,MAAME,eAAe,GAAG,MAAMH,KAAK,CAAC,oDAAoD,CAAC;MACzF,MAAMI,WAAW,GAAG,MAAMD,eAAe,CAACD,IAAI,CAAC,CAAC;MAChDd,UAAU,CAACgB,WAAW,CAAC;MAKvB,MAAMC,cAAc,GAAG,MAAML,KAAK,CAAC,mCAAmC,CAAC;MACvE,MAAMM,UAAU,GAAG,MAAMD,cAAc,CAACH,IAAI,CAAC,CAAC;MAC9CV,SAAS,CAACc,UAAU,CAAC;IACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,MAAMT,iBAAiB,GAAIW,IAAU,IAAK;IAExC,MAAMC,aAAa,GAAGzB,aAAa,CAAC0B,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKJ,IAAI,CAACI,EAAE,CAAC;IAC/D,IAAIH,aAAa,EAAE;MACjBxC,KAAK,CAAC4C,KAAK,CAAC,SAAS,EAAE,wCAAwC,CAAC;MAChE;IACF;IAGA,IAAI7B,aAAa,CAAC8B,MAAM,IAAI,CAAC,EAAE;MAC7B7C,KAAK,CAAC4C,KAAK,CAAC,iBAAiB,EAAE,+BAA+B,CAAC;MAC/D;IACF;IAGA5B,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAEwB,IAAI,CAAC,CAAC;IAG1CvC,KAAK,CAAC4C,KAAK,CAAC,kBAAkB,EAAE,GAAGL,IAAI,CAACO,IAAI,gCAAgC,CAAC;EAC/E,CAAC;EAED,MAAMC,mBAAmB,GAAIR,IAAU,IAAK;IAC1CvB,gBAAgB,CAACgC,IAAI,IAAI;MACvB,MAAMC,UAAU,GAAGD,IAAI,CAACP,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKJ,IAAI,CAACI,EAAE,CAAC;MACnD,IAAIM,UAAU,EAAE;QACd,OAAOD,IAAI,CAACE,MAAM,CAACR,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKJ,IAAI,CAACI,EAAE,CAAC;MAC3C,CAAC,MAAM,IAAIK,IAAI,CAACH,MAAM,GAAG,CAAC,EAAE;QAC1B,OAAO,CAAC,GAAGG,IAAI,EAAET,IAAI,CAAC;MACxB;MACA,OAAOS,IAAI;IACb,CAAC,CAAC;EACJ,CAAC;EAED,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAIpC,aAAa,CAAC8B,MAAM,KAAK,CAAC,EAAE;MAC9BD,KAAK,CAAC,8BAA8B,CAAC;MACrC;IACF;IAEA,IAAI,CAACzB,cAAc,EAAE;MACnByB,KAAK,CAAC,0BAA0B,CAAC;MACjC;IACF;IAEApB,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAM4B,QAAQ,GAAG,MAAM7C,YAAY,CAAC8C,OAAO,CAAC,MAAM,CAAC;MACnD,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACJ,QAAQ,IAAI,IAAI,CAAC;MAIzC,MAAMK,QAAQ,GAAG,MAAM3B,KAAK,CAAC,mCAAmC,EAAE;QAChE4B,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEL,IAAI,CAACM,SAAS,CAAC;UACnBC,UAAU,EAAER,IAAI,CAACX,EAAE;UACnBoB,KAAK,EAAEhD,aAAa,CAACiD,GAAG,CAACzB,IAAI,IAAIA,IAAI,CAACI,EAAE,CAAC;UACzCsB,cAAc,EAAE9C;QAClB,CAAC;MACH,CAAC,CAAC;MAEF,MAAM+C,IAAI,GAAG,MAAMT,QAAQ,CAACzB,IAAI,CAAC,CAAC;MAElC,IAAIkC,IAAI,CAACC,OAAO,EAAE;QAChBvB,KAAK,CAAC,4BAA4B,CAAC;QACnC5B,gBAAgB,CAAC,EAAE,CAAC;QACpBI,iBAAiB,CAAC,IAAI,CAAC;QACvBK,QAAQ,CAAC,CAAC;MACZ,CAAC,MAAM;QACLmB,KAAK,CAAC,wBAAwB,GAAGsB,IAAI,CAAC7B,KAAK,CAAC;MAC9C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CO,KAAK,CAAC,sBAAsB,CAAC;IAC/B,CAAC,SAAS;MACRpB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM4C,cAAc,GAAIC,MAAc,IAAK;IACzC,QAAQA,MAAM;MACZ,KAAK,UAAU;QAAE,OAAO,SAAS;MACjC,KAAK,cAAc;QAAE,OAAO,SAAS;MACrC,KAAK,WAAW;QAAE,OAAO,SAAS;MAClC,KAAK,WAAW;QAAE,OAAO,SAAS;MAClC,KAAK,WAAW;QAAE,OAAO,SAAS;MAClC;QAAS,OAAO,SAAS;IAC3B;EACF,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAC;IAAE/B;EAAqB,CAAC,KAAK;IAC/C,MAAMU,UAAU,GAAGlC,aAAa,CAAC0B,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKJ,IAAI,CAACI,EAAE,CAAC;IAE5D,OACElC,OAAA,CAACR,IAAI;MACHsE,KAAK,EAAE,CAACC,MAAM,CAACC,QAAQ,EAAExB,UAAU,IAAIuB,MAAM,CAACE,gBAAgB,CAAE;MAChEC,OAAO,EAAEA,CAAA,KAAM5B,mBAAmB,CAACR,IAAI,CAAE;MAAAqC,QAAA,EAEzCnE,OAAA,CAACR,IAAI,CAAC4E,OAAO;QAACN,KAAK,EAAEC,MAAM,CAACM,WAAY;QAAAF,QAAA,GACtCnE,OAAA,CAACb,IAAI;UAAC2E,KAAK,EAAEC,MAAM,CAACO,QAAS;UAAAH,QAAA,GAC3BnE,OAAA,CAACP,KAAK;YAACqE,KAAK,EAAEC,MAAM,CAACQ,QAAS;YAAAJ,QAAA,EAAErC,IAAI,CAACO;UAAI;YAAAmC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAClD3E,OAAA,CAACN,SAAS;YAACoE,KAAK,EAAEC,MAAM,CAACa,OAAQ;YAAAT,QAAA,GAAC,OAAK,EAACrC,IAAI,CAAC+C,GAAG;UAAA;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,EAC7D3E,OAAA,CAACN,SAAS;YAACoE,KAAK,EAAEC,MAAM,CAACe,YAAa;YAAAX,QAAA,EAAErC,IAAI,CAACiD;UAAS;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/D,CAAC,EACNnC,UAAU,IACTxC,OAAA,CAACb,IAAI;UAAC2E,KAAK,EAAEC,MAAM,CAACiB,SAAU;UAAAb,QAAA,EAC5BnE,OAAA,CAACP,KAAK;YAACqE,KAAK,EAAEC,MAAM,CAACkB,aAAc;YAAAd,QAAA,EAAC;UAAC;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CACP;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACW;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAEX,CAAC;EAED,MAAMO,WAAW,GAAGA,CAAC;IAAEpD;EAAsB,CAAC,KAC5C9B,OAAA,CAACR,IAAI;IAACsE,KAAK,EAAEC,MAAM,CAACoB,SAAU;IAAAhB,QAAA,EAC5BnE,OAAA,CAACR,IAAI,CAAC4E,OAAO;MAAAD,QAAA,GACXnE,OAAA,CAACb,IAAI;QAAC2E,KAAK,EAAEC,MAAM,CAACqB,WAAY;QAAAjB,QAAA,GAC9BnE,OAAA,CAACP,KAAK;UAACqE,KAAK,EAAEC,MAAM,CAACsB,UAAW;UAAAlB,QAAA,GAAC,UAAQ,EAACrC,IAAI,CAACI,EAAE;QAAA;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC1D3E,OAAA,CAACJ,IAAI;UACHkE,KAAK,EAAE,CAACC,MAAM,CAACuB,UAAU,EAAE;YAAEC,eAAe,EAAE5B,cAAc,CAAC7B,IAAI,CAAC8B,MAAM;UAAE,CAAC,CAAE;UAC7E4B,SAAS,EAAEzB,MAAM,CAAC0B,UAAW;UAAAtB,QAAA,EAE5BrC,IAAI,CAAC8B;QAAM;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EACP3E,OAAA,CAACN,SAAS;QAACoE,KAAK,EAAEC,MAAM,CAAC2B,SAAU;QAAAvB,QAAA,EAAErC,IAAI,CAAC6D;MAAY;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,EACnE3E,OAAA,CAACN,SAAS;QAACoE,KAAK,EAAEC,MAAM,CAAC6B,WAAY;QAAAzB,QAAA,EAAErC,IAAI,CAAC+D;MAAgB;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,EACzE3E,OAAA,CAACN,SAAS;QAACoE,KAAK,EAAEC,MAAM,CAAC+B,UAAW;QAAA3B,QAAA,GAAC,SAC5B,EAACrC,IAAI,CAACwB,KAAK,EAAEyC,KAAK,CAAC,GAAG,CAAC,CAAC3D,MAAM,IAAI,CAAC;MAAA;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,EACZ3E,OAAA,CAACN,SAAS;QAACoE,KAAK,EAAEC,MAAM,CAACiC,SAAU;QAAA7B,QAAA,EAChC,IAAI8B,IAAI,CAACnE,IAAI,CAACoE,UAAU,CAAC,CAACC,kBAAkB,CAAC,OAAO;MAAC;QAAA3B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CACP;EAED,OACE3E,OAAA,CAACb,IAAI;IAAC2E,KAAK,EAAEC,MAAM,CAACqC,SAAU;IAAAjC,QAAA,GAC5BnE,OAAA,CAACX,UAAU;MAACyE,KAAK,EAAEC,MAAM,CAACsC,eAAgB;MAAAlC,QAAA,GAExCnE,OAAA,CAACR,IAAI;QAACsE,KAAK,EAAEC,MAAM,CAACuC,WAAY;QAAAnC,QAAA,EAC9BnE,OAAA,CAACR,IAAI,CAAC4E,OAAO;UAAAD,QAAA,GACXnE,OAAA,CAACP,KAAK;YAACqE,KAAK,EAAEC,MAAM,CAACwC,YAAa;YAAApC,QAAA,EAAC;UAAsB;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,EACjE3E,OAAA,CAACb,IAAI;YAAC2E,KAAK,EAAEC,MAAM,CAACyC,gBAAiB;YAAArC,QAAA,EAClC3D,OAAO,CAAC+C,GAAG,CAACkD,MAAM,IACjBzG,OAAA,CAACL,MAAM;cAEL+G,IAAI,EAAEhG,cAAc,KAAK+F,MAAM,CAACvE,EAAE,GAAG,WAAW,GAAG,UAAW;cAC9DgC,OAAO,EAAEA,CAAA,KAAMvD,iBAAiB,CAAC8F,MAAM,CAACvE,EAAE,CAAE;cAC5C4B,KAAK,EAAEC,MAAM,CAAC4C,YAAa;cAAAxC,QAAA,GAE1BsC,MAAM,CAACpE,IAAI,EAAC,gBAAI,EAACoE,MAAM,CAACG,OAAO,EAAC,IACnC;YAAA,GANOH,MAAM,CAACvE,EAAE;cAAAsC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAMR,CACT;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,EAGNrE,aAAa,CAAC8B,MAAM,GAAG,CAAC,IACvBpC,OAAA,CAACR,IAAI;QAACsE,KAAK,EAAEC,MAAM,CAACuC,WAAY;QAAAnC,QAAA,EAC9BnE,OAAA,CAACR,IAAI,CAAC4E,OAAO;UAAAD,QAAA,GACXnE,OAAA,CAACP,KAAK;YAACqE,KAAK,EAAEC,MAAM,CAACwC,YAAa;YAAApC,QAAA,GAAC,sBACb,EAAC7D,aAAa,CAAC8B,MAAM,EAAC,KAC5C;UAAA;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,EACR3E,OAAA,CAACb,IAAI;YAAC2E,KAAK,EAAEC,MAAM,CAAC8C,sBAAuB;YAAA1C,QAAA,EACxC7D,aAAa,CAACiD,GAAG,CAACzB,IAAI,IACrB9B,OAAA,CAACJ,IAAI;cAEHkE,KAAK,EAAEC,MAAM,CAAC+C,gBAAiB;cAC/BC,OAAO,EAAEA,CAAA,KAAMzE,mBAAmB,CAACR,IAAI,CAAE;cAAAqC,QAAA,EAExCrC,IAAI,CAACO;YAAI,GAJLP,IAAI,CAACI,EAAE;cAAAsC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKR,CACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CACP,EAGD3E,OAAA,CAACb,IAAI;QAAC2E,KAAK,EAAEC,MAAM,CAACiD,eAAgB;QAAA7C,QAAA,EAClCnE,OAAA,CAACL,MAAM;UACL+G,IAAI,EAAC,WAAW;UAChBxC,OAAO,EAAExB,WAAY;UACrB5B,OAAO,EAAEA,OAAQ;UACjBmG,QAAQ,EAAEnG,OAAO,IAAIR,aAAa,CAAC8B,MAAM,KAAK,CAAC,IAAI,CAAC1B,cAAe;UACnEoD,KAAK,EAAEC,MAAM,CAACmD,iBAAkB;UAAA/C,QAAA,EAE/BrD,OAAO,GAAG,YAAY,GAAG;QAAc;UAAA0D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,EAGP3E,OAAA,CAACR,IAAI;QAACsE,KAAK,EAAEC,MAAM,CAACuC,WAAY;QAAAnC,QAAA,EAC9BnE,OAAA,CAACR,IAAI,CAAC4E,OAAO;UAAAD,QAAA,GACXnE,OAAA,CAACP,KAAK;YAACqE,KAAK,EAAEC,MAAM,CAACwC,YAAa;YAAApC,QAAA,EAAC;UAAgB;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,EAC3D3E,OAAA,CAACV,QAAQ;YACPmE,IAAI,EAAE7C,MAAM,CAACuG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAE;YACzBtD,UAAU,EAAEqB,WAAY;YACxBkC,YAAY,EAAEtF,IAAI,IAAIA,IAAI,CAACI,EAAE,CAACmF,QAAQ,CAAC,CAAE;YACzCC,aAAa,EAAE;UAAM;YAAA9C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACU;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,EAGb3E,OAAA,CAACH,GAAG;MACF0H,IAAI,EAAC,MAAM;MACXzD,KAAK,EAAEC,MAAM,CAACyD,GAAI;MAClBtD,OAAO,EAAEA,CAAA,KAAM,CAAiC;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAED,MAAMZ,MAAM,GAAG3E,UAAU,CAACqI,MAAM,CAAC;EAC/BrB,SAAS,EAAE;IACTsB,IAAI,EAAE,CAAC;IACPnC,eAAe,EAAE;EACnB,CAAC;EACDc,eAAe,EAAE;IACfqB,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE;EACX,CAAC;EACDrB,WAAW,EAAE;IACXsB,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE;EACb,CAAC;EACDtB,YAAY,EAAE;IACZqB,YAAY,EAAE;EAChB,CAAC;EACDpB,gBAAgB,EAAE;IAChBsB,aAAa,EAAE,KAAK;IACpBC,QAAQ,EAAE,MAAM;IAChBC,GAAG,EAAE;EACP,CAAC;EACDrB,YAAY,EAAE;IACZsB,WAAW,EAAE,EAAE;IACfL,YAAY,EAAE;EAChB,CAAC;EACDf,sBAAsB,EAAE;IACtBiB,aAAa,EAAE,KAAK;IACpBC,QAAQ,EAAE,MAAM;IAChBC,GAAG,EAAE;EACP,CAAC;EACDlB,gBAAgB,EAAE;IAChBvB,eAAe,EAAE;EACnB,CAAC;EACDyB,eAAe,EAAE;IACfY,YAAY,EAAE;EAChB,CAAC;EACDV,iBAAiB,EAAE;IACjBgB,eAAe,EAAE;EACnB,CAAC;EACDlE,QAAQ,EAAE;IACR4D,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE;EACb,CAAC;EACD5D,gBAAgB,EAAE;IAChBsB,eAAe,EAAE,SAAS;IAC1B4C,WAAW,EAAE,SAAS;IACtBC,WAAW,EAAE;EACf,CAAC;EACD/D,WAAW,EAAE;IACXyD,aAAa,EAAE,KAAK;IACpBO,UAAU,EAAE;EACd,CAAC;EACD/D,QAAQ,EAAE;IACRoD,IAAI,EAAE;EACR,CAAC;EACDnD,QAAQ,EAAE;IACR+D,QAAQ,EAAE;EACZ,CAAC;EACD1D,OAAO,EAAE;IACP0D,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACT,CAAC;EACDzD,YAAY,EAAE;IACZwD,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACT,CAAC;EACDvD,SAAS,EAAE;IACTwD,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,EAAE;IAChBnD,eAAe,EAAE,SAAS;IAC1B8C,UAAU,EAAE,QAAQ;IACpBM,cAAc,EAAE;EAClB,CAAC;EACD1D,aAAa,EAAE;IACbsD,KAAK,EAAE,OAAO;IACdD,QAAQ,EAAE;EACZ,CAAC;EACDnD,SAAS,EAAE;IACTyC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE;EACb,CAAC;EACDzC,WAAW,EAAE;IACX0C,aAAa,EAAE,KAAK;IACpBa,cAAc,EAAE,eAAe;IAC/BN,UAAU,EAAE,QAAQ;IACpBT,YAAY,EAAE;EAChB,CAAC;EACDvC,UAAU,EAAE;IACViD,QAAQ,EAAE;EACZ,CAAC;EACDhD,UAAU,EAAE;IACVmD,MAAM,EAAE;EACV,CAAC;EACDhD,UAAU,EAAE;IACV8C,KAAK,EAAE,OAAO;IACdD,QAAQ,EAAE;EACZ,CAAC;EACD5C,SAAS,EAAE;IACT4C,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACT,CAAC;EACD3C,WAAW,EAAE;IACX0C,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACT,CAAC;EACDzC,UAAU,EAAE;IACVwC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACT,CAAC;EACDvC,SAAS,EAAE;IACTsC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACT,CAAC;EACDf,GAAG,EAAE;IACHoB,QAAQ,EAAE,UAAU;IACpBC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,CAAC;IACTxD,eAAe,EAAE;EACnB;AACF,CAAC,CAAC;AAEF,eAAetF,WAAW","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}