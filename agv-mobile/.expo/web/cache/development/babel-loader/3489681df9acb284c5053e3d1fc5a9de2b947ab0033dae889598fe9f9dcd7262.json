{"ast":null,"code":"import { Platform } from 'expo-modules-core';\nimport CameraManager from '../ExpoCameraManager';\nexport const ConversionTables = {\n  type: CameraManager.Type,\n  flash: CameraManager.FlashMode\n};\nexport function convertNativeProps(props) {\n  if (!props || typeof props !== 'object') {\n    return {};\n  }\n  const nativeProps = {};\n  for (const [key, value] of Object.entries(props)) {\n    const prop = key;\n    if (typeof value === 'string' && ConversionTables[prop]) {\n      nativeProps[key] = ConversionTables[prop][value];\n    } else {\n      nativeProps[key] = value;\n    }\n  }\n  return nativeProps;\n}\nexport function ensureNativeProps(props) {\n  const newProps = convertNativeProps(props);\n  newProps.barcodeScannerEnabled = !!props?.onBarcodeScanned;\n  newProps.flashMode = props?.flash ?? 'off';\n  newProps.mute = props?.mute ?? false;\n  newProps.autoFocus = props?.autofocus ?? 'off';\n  if (Platform.OS !== 'web') {\n    delete newProps.poster;\n  }\n  return newProps;\n}","map":{"version":3,"names":["Platform","CameraManager","ConversionTables","type","Type","flash","FlashMode","convertNativeProps","props","nativeProps","key","value","Object","entries","prop","ensureNativeProps","newProps","barcodeScannerEnabled","onBarcodeScanned","flashMode","mute","autoFocus","autofocus","OS","poster"],"sources":["C:\\Users\\vcp_2\\Desktop\\Bentao\\TCC\\AGV-MAC2\\agv-mobile\\node_modules\\expo-camera\\src\\utils\\props.ts"],"sourcesContent":["import { Platform } from 'expo-modules-core';\n\nimport { CameraNativeProps, CameraType, FlashMode, CameraViewProps } from '../Camera.types';\nimport CameraManager from '../ExpoCameraManager';\n\n// Values under keys from this object will be transformed to native options\nexport const ConversionTables: {\n  type: Record<keyof CameraType, CameraNativeProps['facing']>;\n  flash: Record<keyof FlashMode, CameraNativeProps['flashMode']>;\n  [prop: string]: unknown;\n} = {\n  type: CameraManager.Type,\n  flash: CameraManager.FlashMode,\n};\n\nexport function convertNativeProps(props?: CameraViewProps): CameraNativeProps {\n  if (!props || typeof props !== 'object') {\n    return {};\n  }\n\n  const nativeProps: CameraNativeProps = {};\n\n  for (const [key, value] of Object.entries(props)) {\n    const prop = key as 'type' | 'flash' | string;\n    if (typeof value === 'string' && ConversionTables[prop]) {\n      nativeProps[key as keyof CameraNativeProps] =\n        ConversionTables[prop as 'type' | 'flash'][value as any];\n    } else {\n      nativeProps[key as keyof CameraNativeProps] = value;\n    }\n  }\n\n  return nativeProps;\n}\n\nexport function ensureNativeProps(props?: CameraViewProps): CameraNativeProps {\n  const newProps = convertNativeProps(props);\n\n  newProps.barcodeScannerEnabled = !!props?.onBarcodeScanned;\n  newProps.flashMode = props?.flash ?? 'off';\n  newProps.mute = props?.mute ?? false;\n  newProps.autoFocus = props?.autofocus ?? 'off';\n\n  if (Platform.OS !== 'web') {\n    delete newProps.poster;\n  }\n\n  return newProps;\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,mBAAmB;AAG5C,OAAOC,aAAa,MAAM,sBAAsB;AAGhD,OAAO,MAAMC,gBAAgB,GAIzB;EACFC,IAAI,EAAEF,aAAa,CAACG,IAAI;EACxBC,KAAK,EAAEJ,aAAa,CAACK;CACtB;AAED,OAAM,SAAUC,kBAAkBA,CAACC,KAAuB;EACxD,IAAI,CAACA,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IACvC,OAAO,EAAE;EACX;EAEA,MAAMC,WAAW,GAAsB,EAAE;EAEzC,KAAK,MAAM,CAACC,GAAG,EAAEC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACL,KAAK,CAAC,EAAE;IAChD,MAAMM,IAAI,GAAGJ,GAAgC;IAC7C,IAAI,OAAOC,KAAK,KAAK,QAAQ,IAAIT,gBAAgB,CAACY,IAAI,CAAC,EAAE;MACvDL,WAAW,CAACC,GAA8B,CAAC,GACzCR,gBAAgB,CAACY,IAAwB,CAAC,CAACH,KAAY,CAAC;IAC5D,CAAC,MAAM;MACLF,WAAW,CAACC,GAA8B,CAAC,GAAGC,KAAK;IACrD;EACF;EAEA,OAAOF,WAAW;AACpB;AAEA,OAAM,SAAUM,iBAAiBA,CAACP,KAAuB;EACvD,MAAMQ,QAAQ,GAAGT,kBAAkB,CAACC,KAAK,CAAC;EAE1CQ,QAAQ,CAACC,qBAAqB,GAAG,CAAC,CAACT,KAAK,EAAEU,gBAAgB;EAC1DF,QAAQ,CAACG,SAAS,GAAGX,KAAK,EAAEH,KAAK,IAAI,KAAK;EAC1CW,QAAQ,CAACI,IAAI,GAAGZ,KAAK,EAAEY,IAAI,IAAI,KAAK;EACpCJ,QAAQ,CAACK,SAAS,GAAGb,KAAK,EAAEc,SAAS,IAAI,KAAK;EAE9C,IAAItB,QAAQ,CAACuB,EAAE,KAAK,KAAK,EAAE;IACzB,OAAOP,QAAQ,CAACQ,MAAM;EACxB;EAEA,OAAOR,QAAQ;AACjB","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}