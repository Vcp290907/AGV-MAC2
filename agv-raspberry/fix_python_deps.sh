#!/bin/bash
# Corre√ß√£o completa das depend√™ncias Python (pyzbar + picamera2)
# Execute como: bash fix_python_deps.sh

echo "üîß Corrigindo depend√™ncias Python (pyzbar + picamera2)..."
echo "========================================================"

# Verificar se estamos no diret√≥rio correto
if [ ! -d "venv" ]; then
    echo "‚ùå Ambiente virtual n√£o encontrado!"
    echo "üèóÔ∏è Criando ambiente virtual..."
    python3 -m venv venv
fi

# Ativar ambiente virtual
echo "üêç Ativando ambiente virtual..."
source venv/bin/activate

# Instalar pyzbar no ambiente virtual
echo "üì¶ Instalando pyzbar..."
pip install pyzbar

# Instalar picamera2 se no Raspberry Pi
if grep -q "Raspberry Pi" /proc/device-tree/model 2>/dev/null; then
    echo "üì∑ Instalando depend√™ncias do sistema para c√¢mera..."
    sudo apt install -y python3-libcamera python3-picamera2 libcamera-dev

    echo "üì∑ Testando picamera2 do apt (mais confi√°vel)..."
    # A vers√£o do apt j√° vem com libcamera integrado
fi

# Verificar instala√ß√£o
echo "üß™ Testando imports..."
python3 -c "
try:
    from pyzbar.pyzbar import decode
    print('‚úÖ pyzbar OK')
except ImportError as e:
    print(f'‚ùå pyzbar erro: {e}')
"

if grep -q "Raspberry Pi" /proc/device-tree/model 2>/dev/null; then
    python3 -c "
try:
        import picamera2
        print('‚úÖ picamera2 OK')
    except ImportError as e:
        print(f'‚ö†Ô∏è picamera2 erro: {e}')
    "
    python3 -c "
try:
        import libcamera
        print('‚úÖ libcamera OK')
    except ImportError as e:
        print(f'‚ö†Ô∏è libcamera erro: {e}')
    "
fi

echo ""
echo "‚úÖ Corre√ß√£o conclu√≠da!"
echo "üß™ Teste o qr_code_reader.py agora"