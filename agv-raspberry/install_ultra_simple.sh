#!/bin/bash

# Script de instala√ß√£o ULTRA SIMPLES do AGV Raspberry Pi
# Instala apenas o essencial, sem depend√™ncias problem√°ticas
# Execute como root: sudo bash install_ultra_simple.sh

set -e

echo "‚ö° INSTALA√á√ÉO ULTRA SIMPLES - Sistema AGV Raspberry Pi"
echo "===================================================="

# Verificar se est√° executando como root
if [ "$EUID" -ne 0 ]; then
    echo "‚ùå Execute como root: sudo bash install_ultra_simple.sh"
    exit 1
fi

# Apenas atualizar lista de pacotes (sem upgrade para evitar problemas)
echo "üì¶ Atualizando lista de pacotes..."
apt update

# Instalar apenas Python e ferramentas essenciais
echo "üêç Instalando Python e ferramentas b√°sicas..."
apt install -y \
    python3 \
    python3-pip \
    python3-venv \
    git \
    build-essential

# Criar estrutura de diret√≥rios
echo "üìÅ Criando estrutura de diret√≥rios..."
mkdir -p /home/vcp2909/agv-raspberry
mkdir -p /var/log
mkdir -p /home/vcp2909/agv_data

# Ajustar permiss√µes
echo "üîê Ajustando permiss√µes..."
chown -R vcp2909:vcp2909 /home/vcp2909/agv-raspberry
chown -R vcp2909:vcp2909 /home/vcp2909/agv_data
touch /var/log/agv_system.log
chown vcp2909:vcp2909 /var/log/agv_system.log

# GPIO permissions
usermod -a -G gpio vcp2909 2>/dev/null || true
usermod -a -G dialout vcp2909

echo ""
echo "‚úÖ Instala√ß√£o ultra simples conclu√≠da!"
echo ""
echo "üìã MANUALMENTE, execute como usu√°rio pi:"
echo ""
echo "1. Acesse como usu√°rio pi:"
echo "   su - vcp2909"
echo ""
echo "2. V√° para o diret√≥rio:"
echo "   cd /home/vcp2909/agv-raspberry"
echo ""
echo "3. Instale python3-full (necess√°rio para venv):"
echo "   sudo apt install -y python3-full"
echo ""
echo "4. Crie ambiente virtual:"
echo "   python3 -m venv venv"
echo ""
echo "5. Ative ambiente virtual:"
echo "   source venv/bin/activate"
echo ""
echo "6. Instale depend√™ncias essenciais:"
echo "   pip install Flask Flask-CORS requests pyserial"
echo ""
echo "7. OU use --break-system-packages (N√ÉO RECOMENDADO):"
echo "   pip install --break-system-packages Flask Flask-CORS requests pyserial"
echo ""
echo "6. Descubra o IP do PC automaticamente:"
echo "   python find_pc_ip.py"
echo "   # OU configure manualmente:"
echo "   nano config.py"
echo "   # Altere pc_ip para o IP do seu PC"
echo ""
echo "7. Teste comunica√ß√£o:"
echo "   python test_connection.py"
echo ""
echo "8. Execute sistema:"
echo "   python main.py"
echo ""
echo "üì¶ DEPEND√äNCIAS ADICIONAIS (OPCIONAIS):"
echo "   pip install Pillow numpy  # Para imagens b√°sicas"
echo "   pip install opencv-python # Para vis√£o computacional (pode falhar)"
echo ""
echo "üñºÔ∏è  C√ÇMERA (se usar):"
echo "   sudo apt install v4l-utils"
echo "   sudo usermod -a -G video pi"
echo ""
echo "üîå ESP32 (se usar):"
echo "   sudo apt install python3-serial"
echo ""
echo "üöÄ Comando para iniciar:"
echo "   cd /home/vcp2909/agv-raspberry && source venv/bin/activate && python main.py"
echo ""
echo "üìä Para monitorar:"
echo "   tail -f /var/log/agv_system.log"
echo ""
echo "üõë Para parar:"
echo "   curl -X POST http://localhost:8080/shutdown"
echo ""
echo "‚úÖ VANTAGENS desta instala√ß√£o:"
echo "   - ‚úÖ Funciona em qualquer vers√£o do Raspberry Pi OS"
echo "   - ‚úÖ Sem depend√™ncias problem√°ticas"
echo "   - ‚úÖ Instala√ß√£o r√°pida e confi√°vel"
echo "   - ‚úÖ F√°cil de debugar se houver problemas"
echo "   - ‚úÖ Pode adicionar recursos gradualmente"