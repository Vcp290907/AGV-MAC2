{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VCP2909\\\\Desktop\\\\AGV\\\\AGV-MAC\\\\agv-frontend\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login({\n  onLogin\n}) {\n  _s();\n  const [usuario, setUsuario] = useState(\"\");\n  const [senha, setSenha] = useState(\"\");\n  const [erro, setErro] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setErro(\"\");\n    try {\n      const resp = await fetch(\"http://localhost:5000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          usuario,\n          senha\n        })\n      });\n      const data = await resp.json();\n      if (data.success) {\n        onLogin(data.perfil);\n      } else {\n        setErro(data.message || \"Login inválido\");\n      }\n    } catch {\n      setErro(\"Erro ao conectar com o servidor\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center min-h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"bg-white p-8 rounded shadow-md w-full max-w-xs\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4 text-center\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), erro && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2 text-red-500\",\n        children: erro\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"w-full mb-3 px-3 py-2 border rounded\",\n        type: \"text\",\n        placeholder: \"Usu\\xE1rio\",\n        value: usuario,\n        onChange: e => setUsuario(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"w-full mb-4 px-3 py-2 border rounded\",\n        type: \"password\",\n        placeholder: \"Senha\",\n        value: senha,\n        onChange: e => setSenha(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700\",\n        type: \"submit\",\n        children: \"Entrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"25CDI/0qlLRo9QcrZ3RVS6/al1w=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","onLogin","_s","usuario","setUsuario","senha","setSenha","erro","setErro","handleSubmit","e","preventDefault","resp","fetch","method","headers","body","JSON","stringify","data","json","success","perfil","message","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/VCP2909/Desktop/AGV/AGV-MAC/agv-frontend/src/pages/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function Login({ onLogin }) {\r\n  const [usuario, setUsuario] = useState(\"\");\r\n  const [senha, setSenha] = useState(\"\");\r\n  const [erro, setErro] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setErro(\"\");\r\n    try {\r\n      const resp = await fetch(\"http://localhost:5000/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ usuario, senha }),\r\n      });\r\n      const data = await resp.json();\r\n      if (data.success) {\r\n        onLogin(data.perfil);\r\n      } else {\r\n        setErro(data.message || \"Login inválido\");\r\n      }\r\n    } catch {\r\n      setErro(\"Erro ao conectar com o servidor\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        className=\"bg-white p-8 rounded shadow-md w-full max-w-xs\"\r\n      >\r\n        <h2 className=\"text-2xl font-bold mb-4 text-center\">Login</h2>\r\n        {erro && <div className=\"mb-2 text-red-500\">{erro}</div>}\r\n        <input\r\n          className=\"w-full mb-3 px-3 py-2 border rounded\"\r\n          type=\"text\"\r\n          placeholder=\"Usuário\"\r\n          value={usuario}\r\n          onChange={(e) => setUsuario(e.target.value)}\r\n        />\r\n        <input\r\n          className=\"w-full mb-4 px-3 py-2 border rounded\"\r\n          type=\"password\"\r\n          placeholder=\"Senha\"\r\n          value={senha}\r\n          onChange={(e) => setSenha(e.target.value)}\r\n        />\r\n        <button\r\n          className=\"w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700\"\r\n          type=\"submit\"\r\n        >\r\n          Entrar\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}